/*  =========================================================================
    peer_classes - private header file

    LICENSE FOR THIS PROJECT IS NOT DEFINED!

    Copyright (C) 2022- by peer Developers <zeromq-dev@lists.zeromq.org>

    Please edit license.xml and populate the 'license' tag with proper
    copyright and legalese contents, and regenerate the zproject.

    LICENSE FOR THIS PROJECT IS NOT DEFINED!
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
    =========================================================================
*/

#ifndef PEER_CLASSES_H_INCLUDED
#define PEER_CLASSES_H_INCLUDED

//  Platform definitions, must come first
#include "platform.h"

//  Asserts check the invariants of methods. If they're not
//  fulfilled the program should fail fast. Therefore enforce them!
#ifdef NDEBUG
  #undef NDEBUG
  #include <assert.h>
  #define NDEBUG
#else
  #include <assert.h>
#endif

//  External API
#include "../include/peer.h"

//  Private external dependencies

//  Opaque class structures to allow forward references
#ifndef PEER_MD5SUM_T_DEFINED
typedef struct _peer_md5sum_t peer_md5sum_t;
#define PEER_MD5SUM_T_DEFINED
#endif

//  Extra headers

//  Internal API

#include "peer_md5sum.h"

//  *** To avoid double-definitions, only define if building without draft ***
#ifndef PEER_BUILD_DRAFT_API

//  *** Draft method, defined for internal use only ***
//  Self test of this class.
PEER_PRIVATE void
    peer_md5sum_test (bool verbose);

//  Self test for private classes
PEER_PRIVATE void
    peer_private_selftest (bool verbose, const char *subtest);

#endif // PEER_BUILD_DRAFT_API

#endif
